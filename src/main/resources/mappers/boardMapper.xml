<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.cjs2108_jdg.dao.BoardDAO">
	
	<insert id="setBoardInput">
		insert into board values (default,#{vo.nickName},#{vo.title},#{vo.content},default,default,default,#{vo.part},default);
	</insert>
	
	<insert id="setAdminInput">
		insert into board values (default,#{vo.nickName},#{vo.title},#{vo.content},default,default,default,#{vo.part},1);
	</insert>
	
	<select id="totRecCnt" resultType="int">
		 <if test="part =='전체'">
			<choose>
				<when test="search == 'title'">
					select count(*) from board where title like concat('%',#{searchString},'%') limit #{pageSize};
				</when>
				<when test="search == 'nickName'">
					select count(*) from board where nickName like concat('%',#{searchString},'%') limit #{pageSize};
				</when>
				<otherwise>
					select count(*) from board limit #{pageSize};
				</otherwise>
			</choose>
		</if>
		<if test="part !='전체'">
			<choose>
				<when test="search == 'title'">
					select count(*) from board where part=#{part} and title like concat('%',#{searchString},'%') limit #{pageSize};
				</when>
				<when test="search == 'nickName'">
					select count(*) from board where part=#{part} and nickName like concat('%',#{searchString},'%') limit #{pageSize};
				</when>
				<otherwise>
					select count(*) from board limit #{pageSize};
				</otherwise>
			</choose>
		</if>
	</select>
	
	<select id="getBoardList" resultType="com.spring.cjs2108_jdg.vo.BoardVO">
		  <if test="part =='전체'">
		  	<if test="menuSw == 5">
				<choose>
					<when test="search == 'title'">
						select *, (select count(*) from boardReply where boardIdx=board.idx) as ReplyCnt, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board where title like concat('%',#{searchString},'%') order by top desc, readNum desc limit #{startIndexNo},#{pageSize};
					</when>
					<when test="search == 'nickName'">
						select *, (select count(*) from boardReply where boardIdx=board.idx) as ReplyCnt, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board where nickName like concat('%',#{searchString},'%') order by top desc, readNum desc limit #{startIndexNo},#{pageSize};
					</when>
					<otherwise>
						select *, (select count(*) from boardReply where boardIdx=board.idx) as ReplyCnt, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board order by top desc, readNum desc limit #{startIndexNo},#{pageSize};
					</otherwise>
				</choose>
			</if>
		  	<if test="menuSw != 5">
				<choose>
					<when test="search == 'title'">
						select *, (select count(*) from boardReply where boardIdx=board.idx) as ReplyCnt, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board where title like concat('%',#{searchString},'%') order by top desc, idx desc limit #{startIndexNo},#{pageSize};
					</when>
					<when test="search == 'nickName'">
						select *, (select count(*) from boardReply where boardIdx=board.idx) as ReplyCnt, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board where nickName like concat('%',#{searchString},'%') order by top desc, idx desc limit #{startIndexNo},#{pageSize};
					</when>
					<otherwise>
						select *, (select count(*) from boardReply where boardIdx=board.idx) as ReplyCnt, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board order by top desc, idx desc limit #{startIndexNo},#{pageSize};
					</otherwise>
				</choose>
			</if>
		</if>
		<if test="part !='전체'">
			<if test="menuSw == 5">
				<choose>
					<when test="search == 'title'">
						select *, (select count(*) from boardReply where boardIdx=board.idx) as ReplyCnt, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board where part=#{part} and title like concat('%',#{searchString},'%') order by top desc, readNum desc limit #{startIndexNo},#{pageSize};
					</when>
					<when test="search == 'nickName'">
						select *, (select count(*) from boardReply where boardIdx=board.idx) as ReplyCnt, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board where part=#{part} and nickName like concat('%',#{searchString},'%') order top desc, readNum desc limit #{startIndexNo},#{pageSize};
					</when>
					<otherwise>
						select *, (select count(*) from boardReply where boardIdx=board.idx) as ReplyCnt, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board order by top desc, readNum desc limit #{startIndexNo},#{pageSize};
					</otherwise>
				</choose>
			</if>
			<if test="menuSw != 5">
				<choose>
					<when test="search == 'title'">
						select *, (select count(*) from boardReply where boardIdx=board.idx) as ReplyCnt, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board where part=#{part} and title like concat('%',#{searchString},'%') order by top desc, idx desc limit #{startIndexNo},#{pageSize};
					</when>
					<when test="search == 'nickName'">
						select *, (select count(*) from boardReply where boardIdx=board.idx) as ReplyCnt, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board where part=#{part} and nickName like concat('%',#{searchString},'%') order by top desc, idx desc limit #{startIndexNo},#{pageSize};
					</when>
					<otherwise>
						select *, (select count(*) from boardReply where boardIdx=board.idx) as ReplyCnt, cast(timestampdiff(minute, wDate, now())/60 as signed integer) as diffTime from board order by top desc, idx desc limit #{startIndexNo},#{pageSize};
					</otherwise>
				</choose>
			</if>
		</if>
	</select>
	
	<select id="getBoardContent" resultType="com.spring.cjs2108_jdg.vo.BoardVO">
		select member.level, board.idx,board.nickName,board.title,board.content,board.wDate,board.readNum,board.likeNum,board.part
  		from member inner join board on member.nickName=board.nickName where board.idx=#{idx};
	</select>
	
	<update id="setBoardUpdate">
		update board set part=#{vo.part},title=#{vo.title},content=#{vo.content},wDate=now() where idx=#{vo.idx};
	</update>
	
	<update id="addReadNum">
		update board set readNum = readNum + 1 where idx=#{idx};
	</update>
	
	<delete id="setBoardDelete">
		delete from board where idx=#{idx};
	</delete>
	
	<select id="getPreNext" resultType="com.spring.cjs2108_jdg.vo.BoardVO">
		select idx from board where idx in (
		  (select idx from board where <![CDATA[idx < #{idx}]]> order by idx desc limit 1),
		  (select idx from board where <![CDATA[idx > #{idx}]]> order by idx limit 1));
	</select>
	
	<select id="maxLevelOrder" resultType="String">
		select max(levelOrder) from boardReply where boardIdx=#{boardIdx};
	</select>
	
	<select id="getBoardReply" resultType="com.spring.cjs2108_jdg.vo.BoardReplyVO">
		select * from boardReply where boardIdx=#{idx} order by levelOrder;
	</select>
	
	<select id="getReplyCnt" resultType="int">
		select count(*) from boardReply where boardIdx=#{idx};	
	</select>
	
	<delete id="ReplyDelete">
		delete from boardReply where idx=#{replyIdx};
	</delete>
	
	<update id="levelOrderUp">
		update boardReply set levelOrder = levelOrder + 1 where boardIdx=#{rvo.boardIdx} and levelOrder > #{rvo.levelOrder};
	</update>
	
	<insert id="setReplyInsert">
		insert into boardReply values (default,#{rvo.boardIdx},#{rvo.nickName},default,#{rvo.content},default,#{rvo.levelOrder});
	</insert>
	
	<insert id="setReplyInsert2">
		insert into boardReply values (default,#{rvo.boardIdx},#{rvo.nickName},default,#{rvo.content},#{rvo.level},#{rvo.levelOrder});
	</insert>
	
	<update id="ReplyUpdate">
		update boardReply set content = #{rvo.content}, wDate = now() where idx=#{replyIdx};
	</update>
	
	
	<select id="getLikeCheck" resultType="com.spring.cjs2108_jdg.vo.BoardLikeVO"> 
		select * from boardLike where nickName=#{nickName};
	</select>
	
	<select id="getLikeNum" resultType="int">
		select likeNum from board where idx=#{idx};
	</select>
	
	<select id="boardSearch" resultType="com.spring.cjs2108_jdg.vo.BoardLikeVO">
		select * from boardLike where boardIdx=#{vo.boardIdx} and nickName=#{vo.nickName};
	</select>
	
	<insert id="likeInsert">
		insert into boardLike values (#{vo.nickName},#{vo.boardIdx},default,default);
	</insert>
	
	<update id="likeNumUpdate">
		<if test="vo.likeIdx != 1">
			update boardLike set likeCnt = likeCnt + 1 where boardIdx=#{vo.boardIdx} and nickName=#{vo.nickName};
		</if>
		<if test="vo.likeIdx == 1">
			update boardLike set likeCnt = likeCnt - 1 where boardIdx=#{vo.boardIdx} and nickName=#{vo.nickName};
		</if>
	</update>
	
	<update id="likeUpdate">
		update boardLike set likeIdx = likeIdx * (-1) where boardIdx=#{vo.boardIdx} and nickName=#{vo.nickName};
	</update>
	
	<select id="getBoardLike" resultType="com.spring.cjs2108_jdg.vo.BoardVO">
		select *, (select likeIdx from boardLike where nickName=#{nickName} and boardIdx=board.idx) as likeIdx,
        (select likeCnt from boardLike where nickName=#{nickName} and boardIdx=board.idx) as likeCnt,
        (select sum(likeCnt) from boardLike where boardIdx=board.idx) as likeSum from board where idx=#{idx} order by idx;
	</select>
	
	<update id="likeNumList">
		update board set likeNum = #{vo.likeSum} where idx=#{idx};
	</update>
</mapper>